// <auto-generated />
using Assignment_MVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment_MVC.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    [Migration("20220217095834_Added Country and City")]
    partial class AddedCountryandCity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment_MVC.Models.City", b =>
                {
                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CityName");

                    b.HasIndex("CountryName");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityName = "Göteborg"
                        },
                        new
                        {
                            CityName = "Stockholm"
                        });
                });

            modelBuilder.Entity("Assignment_MVC.Models.Country", b =>
                {
                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountryName");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryName = "Sweden"
                        });
                });

            modelBuilder.Entity("Assignment_MVC.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.HasIndex("CityName");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            City = "Kiruna",
                            Name = "Maja Gräddnos",
                            PhoneNumber = 12345
                        },
                        new
                        {
                            PersonId = 2,
                            City = "Västerås",
                            Name = "Kalle Kaviar",
                            PhoneNumber = 123457
                        },
                        new
                        {
                            PersonId = 3,
                            City = "Stockholm",
                            Name = "Pelle Svanslös",
                            PhoneNumber = 123458
                        },
                        new
                        {
                            PersonId = 4,
                            City = "Göteborg",
                            Name = "Frank Franksson",
                            PhoneNumber = 123458
                        },
                        new
                        {
                            PersonId = 5,
                            City = "Göteborg",
                            Name = "Kalle Söderström",
                            PhoneNumber = 123458
                        });
                });

            modelBuilder.Entity("Assignment_MVC.Models.City", b =>
                {
                    b.HasOne("Assignment_MVC.Models.Country", null)
                        .WithMany("Cities")
                        .HasForeignKey("CountryName");
                });

            modelBuilder.Entity("Assignment_MVC.Models.Person", b =>
                {
                    b.HasOne("Assignment_MVC.Models.City", null)
                        .WithMany("Inhabitants")
                        .HasForeignKey("CityName");
                });
#pragma warning restore 612, 618
        }
    }
}
